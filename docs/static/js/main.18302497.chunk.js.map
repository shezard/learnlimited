{"version":3,"sources":["lib/data.js","lib/search.js","lib/engine.js","ColorIcon.js","SetIcon.js","Result.js","App.js","serviceWorker.js","index.js"],"names":["init","data","rows","split","slice","filter","row","length","map","idx","cols","id","video_id","set","colors","timestamp_draft","timestamp_match","player","format","soft","REGEX","COLOR_MAP","SET_MAP","tokenize","text","match","color","engine","search","Search","tokenizer","addIndex","addDocuments","this","prototype","term","start","offset","results","next","Math","min","total","ColorIcon","props","sort","key","className","SetIcon","toLowerCase","Result","result","href","src","width","height","title","App","useState","setEngine","setResults","setSearch","useEffect","a","fetch","parse","Engine","fetchData","alt","type","placeholder","onChange","e","target","value","onKeyPress","charCode","onClick","newResults","concat","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.18302497.chunk.js","sourcesContent":["function init(data) {\r\n    let rows = data.split('\\r\\n').slice(1);\r\n\r\n    rows = rows.filter((row) => {\r\n        return row.length\r\n    });\r\n\r\n    rows = rows.map(function(row, idx) {\r\n        const cols = row.split(',');\r\n        return {\r\n            id: idx,\r\n            video_id: cols[0],\r\n            set: cols[1],\r\n            colors: cols[2],\r\n            timestamp_draft: cols[3],\r\n            timestamp_match: cols[4],\r\n            player: cols[5],\r\n            format: cols[6],\r\n            soft: cols[7],\r\n        };\r\n    });\r\n\r\n    return rows;\r\n}\r\n\r\nexport default init;\r\n","const REGEX = /[^a-zа-яё0-9\\-']+/i;\r\n\r\nconst COLOR_MAP = {\r\n    'u': 'blue',\r\n    'r': 'red',\r\n    'w': 'white',\r\n    'g': 'green',\r\n    'b': 'black',\r\n};\r\n\r\n// Do not put uppercase here !\r\nconst SET_MAP = {\r\n    'tsp': 'time spiral',\r\n    'isd': 'innistrad',\r\n    'iko': 'ikoria',\r\n    'inv': 'invasion',\r\n    'thb': 'theros beyond death',\r\n    'lrw': 'lorwyn',\r\n    'zen': 'zendikar',\r\n    'eld': 'throne of eldraine',\r\n    'm20': 'core set 2020',\r\n    'war': 'war of the spark',\r\n    'm19': 'core set 2019',\r\n    'chk': 'champion of kamigawa',\r\n};\r\n\r\nfunction tokenize(text) {\r\n\r\n    const isShortColor = !!text.match(/^[rgbwu]+$/i);\r\n\r\n    if (isShortColor) {\r\n        return [\r\n            text,\r\n            ...text.split(''),\r\n            ...text.split('').map(function (color) {\r\n                return COLOR_MAP[color];\r\n            })\r\n        ];\r\n    }\r\n\r\n    const isSet = !!SET_MAP[text];\r\n\r\n    if (isSet) {\r\n        return [\r\n            text,\r\n            ...SET_MAP[text].split(REGEX),\r\n        ];\r\n    }\r\n\r\n    return text\r\n        .split(REGEX)\r\n        .filter(\r\n            (text) => text // Filter empty tokens\r\n        );\r\n}\r\n\r\nexport default tokenize;\r\n","import { Search } from 'js-search';\r\nimport tokenize from './search';\r\n\r\nlet engine = function(rows) {\r\n\r\n    let search = new Search('id');\r\n    search.tokenizer = {\r\n        tokenize\r\n    }\r\n\r\n    search.addIndex('player');\r\n    search.addIndex('set');\r\n    search.addIndex('colors');\r\n    search.addIndex('soft');\r\n    search.addIndex('format');\r\n\r\n    search.addDocuments(rows);\r\n\r\n    this.engine = search;\r\n}\r\n\r\nengine.prototype.search = function(term, start = 0, offset = 5) {\r\n    const results = this.engine.search(term);\r\n    return {\r\n        results: results.slice(start, start + offset),\r\n        next: Math.min(results.length, start + offset),\r\n        total: results.length,\r\n    }\r\n}\r\n\r\nexport default engine;\r\n","import React from 'react';\r\n\r\nfunction ColorIcon(props) {\r\n\r\n    let colors = props.colors.split('');\r\n    colors.sort();\r\n\r\n    return (\r\n        <>\r\n            { colors.map((color, idx) => {\r\n                return <i key={idx} className={`ms ms-${color}`}></i>;\r\n            }) }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ColorIcon;\r\n","import React from 'react';\r\n\r\nfunction SetIcon(props) {\r\n\r\n    return (\r\n        <i className={`ss ss-${props.set.toLowerCase()}`}></i>\r\n    );\r\n}\r\n\r\nexport default SetIcon;\r\n","import React from 'react';\r\nimport ColorIcon from './ColorIcon';\r\nimport SetIcon from './SetIcon';\r\n\r\nfunction Result(props) {\r\n\r\n    return (\r\n        <div className=\"result\">\r\n            <h2>\r\n                <SetIcon set={props.result.set} /> {props.result.set} - {props.result.player} - <ColorIcon colors={props.result.colors} />\r\n            </h2>\r\n            <div className=\"links\">\r\n                <a href={`https://youtu.be/${props.result.video_id}?t=${props.result.timestamp_draft}`}>Draft start</a>\r\n                {\r\n                    props.result.timestamp_match &&\r\n                        <>\r\n                            <span> - </span>\r\n                            <a href={`https://youtu.be/${props.result.video_id}?t=${props.result.timestamp_match}`}>Match start</a>\r\n                        </>\r\n                }\r\n            </div>\r\n            <div className=\"video\">\r\n                <i className=\"spinner fa fa-spinner-notch fa-spin\"></i>\r\n                    <iframe\r\n                        src={`https://www.youtube.com/embed/${props.result.video_id}?start=${props.result.timestamp_draft}`}\r\n                        width=\"720\"\r\n                        height=\"360\"\r\n                        title=\"View draft\"\r\n                    ></iframe>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Result;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport parse from './lib/data';\r\nimport Engine from './lib/engine';\r\nimport Result from './Result';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n    const [engine, setEngine] = useState(null);\r\n    const [results, setResults] = useState({\r\n        results: [],\r\n        next: 0,\r\n        total: 0,\r\n    });\r\n\r\n    const [search, setSearch] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const result = await fetch(\r\n                '/learnlimited/data.csv',\r\n            );\r\n\r\n            const text = await result.text();\r\n            const rows = parse(text);\r\n            const engine = new Engine(rows)\r\n\r\n            setEngine(engine);\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <h1>\r\n                <img src=\"/learnlimited/logo512.png\" alt=\"LL\" /> Learn Limited\r\n            </h1>\r\n            <div className=\"search\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Try: IKO nummot\"\r\n                    onChange={(e) => setSearch(e.target.value)}\r\n                    onKeyPress={(e) => {\r\n                        if (e.charCode === 13) {\r\n                            setResults(engine.search(search));\r\n                        }\r\n                    }}\r\n                />\r\n                <button onClick={() => {\r\n                    setResults(engine.search(search));\r\n                }}>\r\n                    <i className=\"fa fa-search\"></i> Search\r\n                </button>\r\n            </div>\r\n\r\n            <div id=\"results\">\r\n                {results.results.map((row) => {\r\n                    const key = `${row.video_id}${row.timestamp_draft}`;\r\n                    return <Result key={key} result={row} />\r\n                })}\r\n\r\n                {\r\n                    (results.next < results.total) && <button onClick={() => {\r\n                        const newResults = engine.search(search, results.next);\r\n                        setResults({\r\n                            results: results.results.concat(newResults.results),\r\n                            next: newResults.next,\r\n                            total: newResults.total,\r\n                        });\r\n                    }}>\r\n                        <i className=\"fa fa-arrow-circle-down\"></i> Load more videos...\r\n                    </button>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"disclaimer\">\r\n                Portions of Learn Limited are unofficial Fan Content permitted under the Wizards of the Coast Fan Content Policy.\r\n                The literal and graphical information presented on this site about Magic: The Gathering, including card images, the mana symbols, and Oracle text, is copyright Wizards of the Coast, LLC, a subsidiary of Hasbro, Inc.\r\n                Learn Limited is not produced by, endorsed by, supported by, or affiliated with Wizards of the Coast.\r\n                <br />\r\n                All mana images and card symbols © Wizards of the Coast.\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}